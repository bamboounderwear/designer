/* 
  =============================================================================
  Transform Utility Classes
  =============================================================================
*/

/* 
  1. Scale Transforms
  -------------------------
  Control the size of elements with scaling transforms
*/
.scale-0 {
    transform: scale(0);
  }
  
  .scale-50 {
    transform: scale(0.5);
  }
  
  .scale-75 {
    transform: scale(0.75);
  }
  
  .scale-90 {
    transform: scale(0.9);
  }
  
  .scale-95 {
    transform: scale(0.95);
  }
  
  .scale-100 {
    transform: scale(1);
  }
  
  .scale-105 {
    transform: scale(1.05);
  }
  
  .scale-110 {
    transform: scale(1.1);
  }
  
  .scale-125 {
    transform: scale(1.25);
  }
  
  .scale-150 {
    transform: scale(1.5);
  }
  
  .scale-200 {
    transform: scale(2);
  }
  
  /* Scale X-axis only */
  .scale-x-0 {
    transform: scaleX(0);
  }
  
  .scale-x-50 {
    transform: scaleX(0.5);
  }
  
  .scale-x-75 {
    transform: scaleX(0.75);
  }
  
  .scale-x-90 {
    transform: scaleX(0.9);
  }
  
  .scale-x-95 {
    transform: scaleX(0.95);
  }
  
  .scale-x-100 {
    transform: scaleX(1);
  }
  
  .scale-x-105 {
    transform: scaleX(1.05);
  }
  
  .scale-x-110 {
    transform: scaleX(1.1);
  }
  
  .scale-x-125 {
    transform: scaleX(1.25);
  }
  
  .scale-x-150 {
    transform: scaleX(1.5);
  }
  
  .scale-x-200 {
    transform: scaleX(2);
  }
  
  /* Scale Y-axis only */
  .scale-y-0 {
    transform: scaleY(0);
  }
  
  .scale-y-50 {
    transform: scaleY(0.5);
  }
  
  .scale-y-75 {
    transform: scaleY(0.75);
  }
  
  .scale-y-90 {
    transform: scaleY(0.9);
  }
  
  .scale-y-95 {
    transform: scaleY(0.95);
  }
  
  .scale-y-100 {
    transform: scaleY(1);
  }
  
  .scale-y-105 {
    transform: scaleY(1.05);
  }
  
  .scale-y-110 {
    transform: scaleY(1.1);
  }
  
  .scale-y-125 {
    transform: scaleY(1.25);
  }
  
  .scale-y-150 {
    transform: scaleY(1.5);
  }
  
  .scale-y-200 {
    transform: scaleY(2);
  }
  
  /* 
    2. Rotate Transforms
    -------------------------
    Control the rotation of elements
  */
  .rotate-0 {
    transform: rotate(0deg);
  }
  
  .rotate-45 {
    transform: rotate(45deg);
  }
  
  .rotate-90 {
    transform: rotate(90deg);
  }
  
  .rotate-135 {
    transform: rotate(135deg);
  }
  
  .rotate-180 {
    transform: rotate(180deg);
  }
  
  .rotate-225 {
    transform: rotate(225deg);
  }
  
  .rotate-270 {
    transform: rotate(270deg);
  }
  
  .rotate-315 {
    transform: rotate(315deg);
  }
  
  /* Negative rotations */
  .rotate--45 {
    transform: rotate(-45deg);
  }
  
  .rotate--90 {
    transform: rotate(-90deg);
  }
  
  .rotate--135 {
    transform: rotate(-135deg);
  }
  
  .rotate--180 {
    transform: rotate(-180deg);
  }
  
  .rotate--225 {
    transform: rotate(-225deg);
  }
  
  .rotate--270 {
    transform: rotate(-270deg);
  }
  
  .rotate--315 {
    transform: rotate(-315deg);
  }
  
  /* 
    3. Translate Transforms
    -------------------------
    Control the position of elements with translation transforms
  */
  /* X-axis translations (horizontal) */
  .translate-x-0 {
    transform: translateX(0);
  }
  
  .translate-x-1 {
    transform: translateX(0.25rem);
  }
  
  .translate-x-2 {
    transform: translateX(0.5rem);
  }
  
  .translate-x-3 {
    transform: translateX(1rem);
  }
  
  .translate-x-4 {
    transform: translateX(1.5rem);
  }
  
  .translate-x-5 {
    transform: translateX(3rem);
  }
  
  .translate-x-10 {
    transform: translateX(10%);
  }
  
  .translate-x-25 {
    transform: translateX(25%);
  }
  
  .translate-x-50 {
    transform: translateX(50%);
  }
  
  .translate-x-75 {
    transform: translateX(75%);
  }
  
  .translate-x-100 {
    transform: translateX(100%);
  }
  
  .translate-x--1 {
    transform: translateX(-0.25rem);
  }
  
  .translate-x--2 {
    transform: translateX(-0.5rem);
  }
  
  .translate-x--3 {
    transform: translateX(-1rem);
  }
  
  .translate-x--4 {
    transform: translateX(-1.5rem);
  }
  
  .translate-x--5 {
    transform: translateX(-3rem);
  }
  
  .translate-x--10 {
    transform: translateX(-10%);
  }
  
  .translate-x--25 {
    transform: translateX(-25%);
  }
  
  .translate-x--50 {
    transform: translateX(-50%);
  }
  
  .translate-x--75 {
    transform: translateX(-75%);
  }
  
  .translate-x--100 {
    transform: translateX(-100%);
  }
  
  /* Y-axis translations (vertical) */
  .translate-y-0 {
    transform: translateY(0);
  }
  
  .translate-y-1 {
    transform: translateY(0.25rem);
  }
  
  .translate-y-2 {
    transform: translateY(0.5rem);
  }
  
  .translate-y-3 {
    transform: translateY(1rem);
  }
  
  .translate-y-4 {
    transform: translateY(1.5rem);
  }
  
  .translate-y-5 {
    transform: translateY(3rem);
  }
  
  .translate-y-10 {
    transform: translateY(10%);
  }
  
  .translate-y-25 {
    transform: translateY(25%);
  }
  
  .translate-y-50 {
    transform: translateY(50%);
  }
  
  .translate-y-75 {
    transform: translateY(75%);
  }
  
  .translate-y-100 {
    transform: translateY(100%);
  }
  
  .translate-y--1 {
    transform: translateY(-0.25rem);
  }
  
  .translate-y--2 {
    transform: translateY(-0.5rem);
  }
  
  .translate-y--3 {
    transform: translateY(-1rem);
  }
  
  .translate-y--4 {
    transform: translateY(-1.5rem);
  }
  
  .translate-y--5 {
    transform: translateY(-3rem);
  }
  
  .translate-y--10 {
    transform: translateY(-10%);
  }
  
  .translate-y--25 {
    transform: translateY(-25%);
  }
  
  .translate-y--50 {
    transform: translateY(-50%);
  }
  
  .translate-y--75 {
    transform: translateY(-75%);
  }
  
  .translate-y--100 {
    transform: translateY(-100%);
  }
  
  /* Combined X and Y translations */
  .translate-center {
    transform: translate(-50%, -50%);
  }
  
  /* 
    4. Skew Transforms
    -------------------------
    Control the skew/shear of elements
  */
  /* X-axis skew */
  .skew-x-0 {
    transform: skewX(0deg);
  }
  
  .skew-x-5 {
    transform: skewX(5deg);
  }
  
  .skew-x-10 {
    transform: skewX(10deg);
  }
  
  .skew-x-15 {
    transform: skewX(15deg);
  }
  
  .skew-x-20 {
    transform: skewX(20deg);
  }
  
  .skew-x-30 {
    transform: skewX(30deg);
  }
  
  .skew-x--5 {
    transform: skewX(-5deg);
  }
  
  .skew-x--10 {
    transform: skewX(-10deg);
  }
  
  .skew-x--15 {
    transform: skewX(-15deg);
  }
  
  .skew-x--20 {
    transform: skewX(-20deg);
  }
  
  .skew-x--30 {
    transform: skewX(-30deg);
  }
  
  /* Y-axis skew */
  .skew-y-0 {
    transform: skewY(0deg);
  }
  
  .skew-y-5 {
    transform: skewY(5deg);
  }
  
  .skew-y-10 {
    transform: skewY(10deg);
  }
  
  .skew-y-15 {
    transform: skewY(15deg);
  }
  
  .skew-y-20 {
    transform: skewY(20deg);
  }
  
  .skew-y-30 {
    transform: skewY(30deg);
  }
  
  .skew-y--5 {
    transform: skewY(-5deg);
  }
  
  .skew-y--10 {
    transform: skewY(-10deg);
  }
  
  .skew-y--15 {
    transform: skewY(-15deg);
  }
  
  .skew-y--20 {
    transform: skewY(-20deg);
  }
  
  .skew-y--30 {
    transform: skewY(-30deg);
  }
  
  /* 
    5. Transform Origin
    -------------------------
    Control the origin point for transformations
  */
  .origin-center {
    transform-origin: center;
  }
  
  .origin-top {
    transform-origin: top;
  }
  
  .origin-top-right {
    transform-origin: top right;
  }
  
  .origin-right {
    transform-origin: right;
  }
  
  .origin-bottom-right {
    transform-origin: bottom right;
  }
  
  .origin-bottom {
    transform-origin: bottom;
  }
  
  .origin-bottom-left {
    transform-origin: bottom left;
  }
  
  .origin-left {
    transform-origin: left;
  }
  
  .origin-top-left {
    transform-origin: top left;
  }
  
  /* 
    6. 3D Transforms
    -------------------------
    Control 3D transformations for elements
  */
  .rotate-x-0 {
    transform: rotateX(0deg);
  }
  
  .rotate-x-45 {
    transform: rotateX(45deg);
  }
  
  .rotate-x-90 {
    transform: rotateX(90deg);
  }
  
  .rotate-x-180 {
    transform: rotateX(180deg);
  }
  
  .rotate-x--45 {
    transform: rotateX(-45deg);
  }
  
  .rotate-x--90 {
    transform: rotateX(-90deg);
  }
  
  .rotate-x--180 {
    transform: rotateX(-180deg);
  }
  
  .rotate-y-0 {
    transform: rotateY(0deg);
  }
  
  .rotate-y-45 {
    transform: rotateY(45deg);
  }
  
  .rotate-y-90 {
    transform: rotateY(90deg);
  }
  
  .rotate-y-180 {
    transform: rotateY(180deg);
  }
  
  .rotate-y--45 {
    transform: rotateY(-45deg);
  }
  
  .rotate-y--90 {
    transform: rotateY(-90deg);
  }
  
  .rotate-y--180 {
    transform: rotateY(-180deg);
  }
  
  .rotate-z-0 {
    transform: rotateZ(0deg);
  }
  
  .rotate-z-45 {
    transform: rotateZ(45deg);
  }
  
  .rotate-z-90 {
    transform: rotateZ(90deg);
  }
  
  .rotate-z-180 {
    transform: rotateZ(180deg);
  }
  
  .rotate-z--45 {
    transform: rotateZ(-45deg);
  }
  
  .rotate-z--90 {
    transform: rotateZ(-90deg);
  }
  
  .rotate-z--180 {
    transform: rotateZ(-180deg);
  }
  
  /* 
    7. Transform Style
    -------------------------
    Control how nested elements are rendered in 3D space
  */
  .transform-flat {
    transform-style: flat;
  }
  
  .transform-3d {
    transform-style: preserve-3d;
  }
  
  /* 
    8. Backface Visibility
    -------------------------
    Control whether the back face of an element is visible when facing the user
  */
  .backface-visible {
    backface-visibility: visible;
  }
  
  .backface-hidden {
    backface-visibility: hidden;
  }
  
  /* 
    9. Perspective
    -------------------------
    Control the perspective from which all child elements of the object are viewed
  */
  .perspective-none {
    perspective: none;
  }
  
  .perspective-100 {
    perspective: 100px;
  }
  
  .perspective-250 {
    perspective: 250px;
  }
  
  .perspective-500 {
    perspective: 500px;
  }
  
  .perspective-750 {
    perspective: 750px;
  }
  
  .perspective-1000 {
    perspective: 1000px;
  }
  
  .perspective-1500 {
    perspective: 1500px;
  }
  
  .perspective-2000 {
    perspective: 2000px;
  }
  
  /* 
    10. Perspective Origin
    -------------------------
    Control the position at which the viewer is looking
  */
  .perspective-origin-center {
    perspective-origin: center;
  }
  
  .perspective-origin-top {
    perspective-origin: top;
  }
  
  .perspective-origin-top-right {
    perspective-origin: top right;
  }
  
  .perspective-origin-right {
    perspective-origin: right;
  }
  
  .perspective-origin-bottom-right {
    perspective-origin: bottom right;
  }
  
  .perspective-origin-bottom {
    perspective-origin: bottom;
  }
  
  .perspective-origin-bottom-left {
    perspective-origin: bottom left;
  }
  
  .perspective-origin-left {
    perspective-origin: left;
  }
  
  .perspective-origin-top-left {
    perspective-origin: top left;
  }
  
  /* 
    11. Combined Transform Utilities
    -------------------------
    Common combinations of transforms for frequent use cases
  */
  .flip-horizontal {
    transform: scaleX(-1);
  }
  
  .flip-vertical {
    transform: scaleY(-1);
  }
  
  .flip-both {
    transform: scale(-1, -1);
  }
  
  .center-absolute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  .tilt-left {
    transform: rotate(-5deg);
  }
  
  .tilt-right {
    transform: rotate(5deg);
  }
  
  .push-down {
    transform: translateY(3px);
  }
  
  .push-up {
    transform: translateY(-3px);
  }
  
  /* 
    12. Responsive Transform Utilities
    -------------------------
    Control transforms at different screen sizes
  */
  @media (min-width: 768px) {
    .md\:scale-100 {
      transform: scale(1);
    }
    
    .md\:scale-110 {
      transform: scale(1.1);
    }
    
    .md\:rotate-0 {
      transform: rotate(0deg);
    }
    
    .md\:rotate-45 {
      transform: rotate(45deg);
    }
    
    .md\:translate-x-0 {
      transform: translateX(0);
    }
    
    .md\:translate-y-0 {
      transform: translateY(0);
    }
  }
  
  @media (min-width: 1024px) {
    .lg\:scale-100 {
      transform: scale(1);
    }
    
    .lg\:scale-110 {
      transform: scale(1.1);
    }
    
    .lg\:rotate-0 {
      transform: rotate(0deg);
    }
    
    .lg\:rotate-45 {
      transform: rotate(45deg);
    }
    
    .lg\:translate-x-0 {
      transform: translateX(0);
    }
    
    .lg\:translate-y-0 {
      transform: translateY(0);
    }
  }
  
  /* 
    13. Transform Transition Utilities
    -------------------------
    Combine transforms with transitions for smooth effects
  */
  .transform-transition {
    transition: transform 0.3s ease;
  }
  
  .transform-transition-fast {
    transition: transform 0.15s ease;
  }
  
  .transform-transition-slow {
    transition: transform 0.5s ease;
  }
  
  .transform-transition-bounce {
    transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  /* 
    14. Transform Hover Effects
    -------------------------
    Transform effects that activate on hover
  */
  .hover-scale {
    transition: transform 0.3s ease;
  }
  
  .hover-scale:hover {
    transform: scale(1.05);
  }
  
  .hover-rotate {
    transition: transform 0.3s ease;
  }
  
  .hover-rotate:hover {
    transform: rotate(5deg);
  }
  
  .hover-translate-up {
    transition: transform 0.3s ease;
  }
  
  .hover-translate-up:hover {
    transform: translateY(-5px);
  }
  
  /* 
    15. Transform Focus Effects
    -------------------------
    Transform effects that activate on focus (for interactive elements)
  */
  .focus-scale:focus {
    transform: scale(1.05);
  }
  
  .focus-translate-up:focus {
    transform: translateY(-2px);
  }