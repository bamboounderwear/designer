/* 
  =============================================================================
  Additional Utility Classes - With Detailed Explanations
  =============================================================================
*/

/* 
  1. Aspect Ratio Containers
  -------------------------
  These utilities create containers that maintain specific width-to-height ratios,
  regardless of the viewport size. Useful for responsive images, videos, maps, etc.
  without causing layout shifts during page load.
*/
.aspect-ratio {
    /* Creates a container with relative positioning to allow absolute positioning of children */
    position: relative;
    width: 100%;
  }
  
  .aspect-ratio > * {
    /* Positions child elements to fill the entire container */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Makes media content cover the container while maintaining aspect ratio */
    object-fit: cover;
  }
  
  .aspect-1x1 {
    /* Creates a perfect square (1:1 ratio) - useful for profile pictures, thumbnails */
    padding-top: 100%;
  }
  
  .aspect-4x3 {
    /* Creates a 4:3 ratio - traditional TV/monitor format, presentation slides */
    padding-top: 75%;
  }
  
  .aspect-16x9 {
    /* Creates a 16:9 ratio - modern widescreen format, videos, presentations */
    padding-top: 56.25%;
  }
  
  .aspect-21x9 {
    /* Creates a 21:9 ratio - ultrawide format, cinematic videos, panoramic images */
    padding-top: 42.85%;
  }
  
  /* 
    2. Typography Enhancements
    -------------------------
    These utilities provide advanced text formatting options beyond basic alignment
    and decoration, helping with text overflow, multi-line clamping, and font families.
  */
  .text-truncate {
    /* Truncates text with an ellipsis (...) when it overflows its container */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  .text-clamp-1,
  .text-clamp-2,
  .text-clamp-3 {
    /* Base styles for line clamping (limiting text to specific number of lines) */
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .text-clamp-1 {
    /* Limits text to exactly 1 line, adding ellipsis if it overflows */
    -webkit-line-clamp: 1;
  }
  
  .text-clamp-2 {
    /* Limits text to exactly 2 lines, adding ellipsis if it overflows */
    -webkit-line-clamp: 2;
  }
  
  .text-clamp-3 {
    /* Limits text to exactly 3 lines, adding ellipsis if it overflows */
    -webkit-line-clamp: 3;
  }
  
  .font-mono {
    /* Sets monospace font for code, technical content, or stylistic purposes */
    font-family: monospace;
  }
  
  .font-sans {
    /* Sets sans-serif system font stack for clean, modern UI text */
    font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  }
  
  .font-serif {
    /* Sets serif font for traditional, formal, or editorial content */
    font-family: Georgia, "Times New Roman", serif;
  }
  
  /* 
    3. Responsive Display Utilities
    -------------------------
    These utilities control element visibility based on viewport size,
    allowing for responsive designs without writing custom media queries.
  */
  @media (max-width: 767px) {
    .hide-xs {
      /* Hides elements on extra small screens (mobile) */
      display: none !important;
    }
  }
  
  @media (min-width: 768px) and (max-width: 1023px) {
    .hide-md {
      /* Hides elements on medium screens (tablets) */
      display: none !important;
    }
  }
  
  @media (min-width: 1024px) {
    .hide-lg {
      /* Hides elements on large screens (desktops) */
      display: none !important;
    }
  }
  
  @media (max-width: 767px) {
    .show-xs {
      /* Shows elements only on extra small screens (mobile) */
      display: block !important;
    }
  }
  
  @media (min-width: 768px) and (max-width: 1023px) {
    .show-md {
      /* Shows elements only on medium screens (tablets) */
      display: block !important;
    }
  }
  
  @media (min-width: 1024px) {
    .show-lg {
      /* Shows elements only on large screens (desktops) */
      display: block !important;
    }
  }
  
  /* 
    4. Scroll Utilities
    -------------------------
    These utilities control scrolling behavior and scrollbar appearance,
    enhancing user experience for scrollable content areas.
  */
  .scroll-smooth {
    /* Enables smooth scrolling animation for anchor links and programmatic scrolling */
    scroll-behavior: smooth;
  }
  
  .scrollbar-hide {
    /* Completely hides scrollbars while maintaining scroll functionality */
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    /* Hides scrollbar in WebKit browsers (Chrome, Safari) */
    display: none;
  }
  
  .scrollbar-thin {
    /* Creates a thin scrollbar in Firefox */
    scrollbar-width: thin;
  }
  
  .scrollbar-thin::-webkit-scrollbar {
    /* Creates a thin scrollbar in WebKit browsers */
    width: 6px;
    height: 6px;
  }
  
  .scrollbar-thin::-webkit-scrollbar-thumb {
    /* Styles the scrollbar thumb (the draggable part) */
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 3px;
  }
  
  /* 
    5. Backdrop Filters
    -------------------------
    These utilities apply visual effects to the area behind an element,
    creating frosted glass effects and enhancing depth in UI design.
  */
  .backdrop-blur-sm {
    /* Applies a slight blur effect to content behind the element */
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
  }
  
  .backdrop-blur {
    /* Applies a medium blur effect to content behind the element */
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  .backdrop-blur-lg {
    /* Applies a strong blur effect to content behind the element */
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(16px);
  }
  
  /* 
    6. Transitions and Animations
    -------------------------
    These utilities add motion to elements through CSS transitions and transforms,
    creating more engaging and responsive user interfaces.
  */
  .transition {
    /* Adds a smooth transition effect to all animatable properties */
    transition: all 0.3s ease;
  }
  
  .transition-fast {
    /* Adds a quick transition effect for snappy interactions */
    transition: all 0.15s ease;
  }
  
  .transition-slow {
    /* Adds a slow transition effect for more deliberate animations */
    transition: all 0.5s ease;
  }
  
  .hover-grow {
    /* Prepares an element to grow slightly when hovered */
    transition: transform 0.3s ease;
  }
  
  .hover-grow:hover {
    /* Scales the element up by 5% when hovered, creating a subtle growth effect */
    transform: scale(1.05);
  }
  
  .hover-shrink {
    /* Prepares an element to shrink slightly when hovered */
    transition: transform 0.3s ease;
  }
  
  .hover-shrink:hover {
    /* Scales the element down by 5% when hovered, creating a subtle shrink effect */
    transform: scale(0.95);
  }
  
  /* 
    7. Gradient Backgrounds
    -------------------------
    These utilities apply predefined gradient backgrounds to elements,
    adding visual interest and depth without custom CSS.
  */
  .bg-gradient-primary {
    /* Creates a purple-to-indigo gradient, suitable for primary UI elements */
    background: linear-gradient(135deg, #6366f1, #8b5cf6);
  }
  
  .bg-gradient-secondary {
    /* Creates a dark slate gradient, suitable for secondary UI elements */
    background: linear-gradient(135deg, #1e293b, #334155);
  }
  
  .bg-gradient-success {
    /* Creates a green gradient, suitable for success states or actions */
    background: linear-gradient(135deg, #10b981, #059669);
  }
  
  .bg-gradient-danger {
    /* Creates a red gradient, suitable for error states or destructive actions */
    background: linear-gradient(135deg, #ef4444, #dc2626);
  }
  
  /* 
    8. Filters
    -------------------------
    These utilities apply visual filters to elements, allowing for
    creative effects and visual adjustments without image editing.
  */
  .grayscale {
    /* Removes all color, converting the element to black and white */
    filter: grayscale(100%);
  }
  
  .grayscale-0 {
    /* Explicitly sets no grayscale effect (useful for overriding inherited filters) */
    filter: grayscale(0%);
  }
  
  .grayscale-50 {
    /* Applies a 50% grayscale effect, partially desaturating colors */
    filter: grayscale(50%);
  }
  
  .brightness-50 {
    /* Reduces brightness to 50%, making the element darker */
    filter: brightness(0.5);
  }
  
  .brightness-75 {
    /* Reduces brightness to 75%, slightly darkening the element */
    filter: brightness(0.75);
  }
  
  .brightness-125 {
    /* Increases brightness to 125%, making the element brighter */
    filter: brightness(1.25);
  }
  
  .brightness-150 {
    /* Increases brightness to 150%, significantly brightening the element */
    filter: brightness(1.5);
  }
  
  .contrast-50 {
    /* Reduces contrast to 50%, making differences between colors less pronounced */
    filter: contrast(0.5);
  }
  
  .contrast-125 {
    /* Increases contrast to 125%, making differences between colors more pronounced */
    filter: contrast(1.25);
  }
  
  .blur-sm {
    /* Applies a slight blur effect to the element itself */
    filter: blur(4px);
  }
  
  .blur {
    /* Applies a medium blur effect to the element itself */
    filter: blur(8px);
  }
  
  .blur-lg {
    /* Applies a strong blur effect to the element itself */
    filter: blur(16px);
  }
  
  /* 
    9. Cursor Utilities
    -------------------------
    These utilities change the mouse cursor appearance when hovering over elements,
    providing visual cues about element interactivity and functionality.
  */
  .cursor-pointer {
    /* Changes cursor to a pointing hand, indicating a clickable element */
    cursor: pointer;
  }
  
  .cursor-not-allowed {
    /* Changes cursor to indicate an action is not allowed (e.g., disabled buttons) */
    cursor: not-allowed;
  }
  
  .cursor-wait {
    /* Changes cursor to indicate loading or processing */
    cursor: wait;
  }
  
  .cursor-text {
    /* Changes cursor to indicate text can be selected */
    cursor: text;
  }
  
  .cursor-move {
    /* Changes cursor to indicate an element can be moved */
    cursor: move;
  }
  
  .cursor-grab {
    /* Changes cursor to indicate an element can be grabbed (for drag operations) */
    cursor: grab;
  }
  
  .cursor-grabbing {
    /* Changes cursor to indicate an element is being grabbed/dragged */
    cursor: grabbing;
  }
  
  /* 
    10. User Select
    -------------------------
    These utilities control whether and how users can select text within elements,
    useful for preventing accidental selection or forcing specific selection behaviors.
  */
  .select-none {
    /* Prevents text selection entirely, useful for UI elements or decorative text */
    user-select: none;
  }
  
  .select-text {
    /* Explicitly allows text selection (useful for overriding inherited settings) */
    user-select: text;
  }
  
  .select-all {
    /* Makes the entire text content select as a single operation when clicked */
    user-select: all;
  }
  
  /* 
    11. Opacity Utilities
    -------------------------
    These utilities control element transparency, useful for creating layered UI effects,
    indicating disabled states, or creating fade transitions.
  */
  .opacity-0 {
    /* Makes an element completely transparent (invisible but still in the DOM) */
    opacity: 0;
  }
  
  .opacity-25 {
    /* Makes an element 75% transparent (25% visible) */
    opacity: 0.25;
  }
  
  .opacity-50 {
    /* Makes an element 50% transparent (half visible) */
    opacity: 0.5;
  }
  
  .opacity-75 {
    /* Makes an element 25% transparent (75% visible) */
    opacity: 0.75;
  }
  
  .opacity-100 {
    /* Makes an element fully opaque (completely visible) */
    opacity: 1;
  }
  
  /* 
    12. Pointer Events
    -------------------------
    These utilities control whether elements respond to pointer (mouse/touch) events,
    allowing for click-through elements or preventing interaction.
  */
  .pointer-events-none {
    /* Disables all pointer interactions, making the element "click-through" */
    pointer-events: none;
  }
  
  .pointer-events-auto {
    /* Enables pointer interactions (useful for overriding inherited settings) */
    pointer-events: auto;
  }
  
  /* 
    13. Screen Reader Utilities
    -------------------------
    These utilities help with accessibility by controlling how content is presented
    to screen readers while managing visual presentation.
  */
  .sr-only {
    /* Hides content visually but keeps it accessible to screen readers */
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  .not-sr-only {
    /* Reverses sr-only, making content visible again (useful for responsive designs) */
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
  
  /* 
    14. Object Fit
    -------------------------
    These utilities control how media content (images, videos) fits within its container,
    preventing distortion while maintaining proper sizing.
  */
  .object-contain {
    /* Scales content to fit within container while preserving aspect ratio */
    object-fit: contain;
  }
  
  .object-cover {
    /* Fills container while preserving aspect ratio, may crop content */
    object-fit: cover;
  }
  
  .object-fill {
    /* Stretches content to fill container exactly, may distort aspect ratio */
    object-fit: fill;
  }
  
  .object-none {
    /* Doesn't resize content at all, may cause overflow */
    object-fit: none;
  }
  
  .object-scale-down {
    /* Uses either contain or none, whichever results in a smaller size */
    object-fit: scale-down;
  }
  
  /* 
    15. Gap Utilities for Flex
    -------------------------
    These utilities control spacing between flex or grid items,
    creating consistent spacing without margins that can cause layout issues.
  */
  .gap-0 {
    /* Removes all spacing between flex/grid items */
    gap: 0;
  }
  
  .gap-1 {
    /* Adds 0.25rem (4px) spacing between flex/grid items */
    gap: 0.25rem;
  }
  
  .gap-2 {
    /* Adds 0.5rem (8px) spacing between flex/grid items */
    gap: 0.5rem;
  }
  
  .gap-3 {
    /* Adds 1rem (16px) spacing between flex/grid items */
    gap: 1rem;
  }
  
  .gap-4 {
    /* Adds 1.5rem (24px) spacing between flex/grid items */
    gap: 1.5rem;
  }
  
  .gap-5 {
    /* Adds 3rem (48px) spacing between flex/grid items */
    gap: 3rem;
  }
  
  /* 
    16. Sticky Positioning
    -------------------------
    These utilities create elements that stick to viewport edges during scroll,
    useful for headers, navigation, or call-to-action elements.
  */
  .sticky-top {
    /* Makes an element stick to the top of the viewport when scrolling past it */
    position: sticky;
    top: 0;
    z-index: 1020;
  }
  
  .sticky-bottom {
    /* Makes an element stick to the bottom of the viewport when scrolling past it */
    position: sticky;
    bottom: 0;
    z-index: 1020;
  }
  
  /* 
    17. Text Shadow
    -------------------------
    These utilities add shadow effects to text, improving readability
    on varied backgrounds and adding visual depth.
  */
  .text-shadow-sm {
    /* Adds a subtle text shadow for slight depth */
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }
  
  .text-shadow {
    /* Adds a medium text shadow for moderate depth */
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .text-shadow-lg {
    /* Adds a pronounced text shadow for significant depth */
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  /* 
    18. Blend Modes
    -------------------------
    These utilities control how elements blend with backgrounds,
    creating creative visual effects and color interactions.
  */
  .blend-multiply {
    /* Multiplies colors, resulting in darker blend (like layering two transparencies) */
    mix-blend-mode: multiply;
  }
  
  .blend-screen {
    /* Opposite of multiply, results in lighter colors (like projecting two images) */
    mix-blend-mode: screen;
  }
  
  .blend-overlay {
    /* Combines multiply and screen, preserving highlights and shadows */
    mix-blend-mode: overlay;
  }
  
  .blend-darken {
    /* Selects the darker of the blend and base colors */
    mix-blend-mode: darken;
  }
  
  .blend-lighten {
    /* Selects the lighter of the blend and base colors */
    mix-blend-mode: lighten;
  }
  
  /* 
    19. Columns for Text
    -------------------------
    These utilities create newspaper-style column layouts for text,
    improving readability for long content and utilizing horizontal space.
  */
  .columns-1 {
    /* Displays text in a single column (default behavior) */
    column-count: 1;
  }
  
  .columns-2 {
    /* Splits text into two equal columns */
    column-count: 2;
  }
  
  .columns-3 {
    /* Splits text into three equal columns */
    column-count: 3;
  }
  
  .columns-gap-1 {
    /* Sets a small gap (0.25rem) between text columns */
    column-gap: 0.25rem;
  }
  
  .columns-gap-2 {
    /* Sets a medium gap (0.5rem) between text columns */
    column-gap: 0.5rem;
  }
  
  .columns-gap-3 {
    /* Sets a large gap (1rem) between text columns */
    column-gap: 1rem;
  }
  
  /* 
    20. Isolation
    -------------------------
    These utilities control stacking context for elements,
    solving z-index issues and ensuring proper layering.
  */
  .isolate {
    /* Creates a new stacking context, isolating the element from ancestors' z-index */
    isolation: isolate;
  }
  
  .isolation-auto {
    /* Resets isolation to browser default behavior */
    isolation: auto;
  }
  
  /* 
    21. Responsive Spacing
    -------------------------
    These utilities apply spacing only at specific breakpoints,
    allowing for different spacing on different devices.
  */
  @media (min-width: 768px) {
    .m-md-0 { 
      /* Removes all margin on medium screens and up */
      margin: 0 !important; 
    }
    .m-md-1 { 
      /* Sets 0.25rem margin on medium screens and up */
      margin: 0.25rem !important; 
    }
    .m-md-2 { 
      /* Sets 0.5rem margin on medium screens and up */
      margin: 0.5rem !important; 
    }
    .m-md-3 { 
      /* Sets 1rem margin on medium screens and up */
      margin: 1rem !important; 
    }
    .m-md-4 { 
      /* Sets 1.5rem margin on medium screens and up */
      margin: 1.5rem !important; 
    }
    .m-md-5 { 
      /* Sets 3rem margin on medium screens and up */
      margin: 3rem !important; 
    }
    
    .p-md-0 { 
      /* Removes all padding on medium screens and up */
      padding: 0 !important; 
    }
    .p-md-1 { 
      /* Sets 0.25rem padding on medium screens and up */
      padding: 0.25rem !important; 
    }
    .p-md-2 { 
      /* Sets 0.5rem padding on medium screens and up */
      padding: 0.5rem !important; 
    }
    .p-md-3 { 
      /* Sets 1rem padding on medium screens and up */
      padding: 1rem !important; 
    }
    .p-md-4 { 
      /* Sets 1.5rem padding on medium screens and up */
      padding: 1.5rem !important; 
    }
    .p-md-5 { 
      /* Sets 3rem padding on medium screens and up */
      padding: 3rem !important; 
    }
  }
  
  @media (min-width: 1024px) {
    .m-lg-0 { 
      /* Removes all margin on large screens and up */
      margin: 0 !important; 
    }
    .m-lg-1 { 
      /* Sets 0.25rem margin on large screens and up */
      margin: 0.25rem !important; 
    }
    .m-lg-2 { 
      /* Sets 0.5rem margin on large screens and up */
      margin: 0.5rem !important; 
    }
    .m-lg-3 { 
      /* Sets 1rem margin on large screens and up */
      margin: 1rem !important; 
    }
    .m-lg-4 { 
      /* Sets 1.5rem margin on large screens and up */
      margin: 1.5rem !important; 
    }
    .m-lg-5 { 
      /* Sets 3rem margin on large screens and up */
      margin: 3rem !important; 
    }
    
    .p-lg-0 { 
      /* Removes all padding on large screens and up */
      padding: 0 !important; 
    }
    .p-lg-1 { 
      /* Sets 0.25rem padding on large screens and up */
      padding: 0.25rem !important; 
    }
    .p-lg-2 { 
      /* Sets 0.5rem padding on large screens and up */
      padding: 0.5rem !important; 
    }
    .p-lg-3 { 
      /* Sets 1rem padding on large screens and up */
      padding: 1rem !important; 
    }
    .p-lg-4 { 
      /* Sets 1.5rem padding on large screens and up */
      padding: 1.5rem !important; 
    }
    .p-lg-5 { 
      /* Sets 3rem padding on large screens and up */
      padding: 3rem !important; 
    }
  }
  
  /* 
    22. Responsive Text Alignment
    -------------------------
    These utilities control text alignment at specific breakpoints,
    allowing for different text layouts on different devices.
  */
  @media (min-width: 768px) {
    .text-align-center-md {
      /* Centers text on medium screens and up */
      text-align: center !important;
    }
    .text-align-start-md {
      /* Left-aligns text on medium screens and up */
      text-align: left !important;
    }
    .text-align-end-md {
      /* Right-aligns text on medium screens and up */
      text-align: right !important;
    }
  }
  
  @media (min-width: 1024px) {
    .text-align-center-lg {
      /* Centers text on large screens and up */
      text-align: center !important;
    }
    .text-align-start-lg {
      /* Left-aligns text on large screens and up */
      text-align: left !important;
    }
    .text-align-end-lg {
      /* Right-aligns text on large screens and up */
      text-align: right !important;
    }
  }
  
  /* 
    23. Responsive Flex Direction
    -------------------------
    These utilities control flex container direction at specific breakpoints,
    enabling responsive layouts that change orientation based on screen size.
  */
  @media (min-width: 768px) {
    .flex-row-md {
      /* Changes flex direction to horizontal on medium screens and up */
      flex-direction: row !important;
    }
    .flex-column-md {
      /* Changes flex direction to vertical on medium screens and up */
      flex-direction: column !important;
    }
  }
  
  @media (min-width: 1024px) {
    .flex-row-lg {
      /* Changes flex direction to horizontal on large screens and up */
      flex-direction: row !important;
    }
    .flex-column-lg {
      /* Changes flex direction to vertical on large screens and up */
      flex-direction: column !important;
    }
  }
  
  /* 
    24. Print Utilities
    -------------------------
    These utilities control how content appears when printed,
    optimizing layouts for paper output and saving ink.
  */
  @media print {
    .print-hide {
      /* Hides elements when printing (e.g., navigation, ads) */
      display: none !important;
    }
    
    .print-show {
      /* Forces elements to display when printing (even if hidden on screen) */
      display: block !important;
    }
    
    .print-break-before {
      /* Forces a page break before this element when printing */
      page-break-before: always;
    }
    
    .print-break-after {
      /* Forces a page break after this element when printing */
      page-break-after: always;
    }
    
    .print-break-inside-avoid {
      /* Prevents page breaks within this element when printing */
      page-break-inside: avoid;
    }
  }
  
  /* 
    25. Focus Visible Utilities
    -------------------------
    These utilities enhance keyboard navigation accessibility by controlling
    focus indicators for interactive elements.
  */
  .focus-outline-none:focus {
    /* Removes the default focus outline completely */
    outline: none;
  }
  
  .focus-ring:focus-visible {
    /* Adds a custom focus indicator only for keyboard navigation (not mouse clicks) */
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }